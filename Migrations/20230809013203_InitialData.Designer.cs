// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectEF;

#nullable disable

namespace ProjectEF.Migrations
{
    [DbContext(typeof(TaskContext))]
    [Migration("20230809013203_InitialData")]
    partial class InitialData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProjectEF.Category", b =>
                {
                    b.Property<Guid>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("weight")
                        .HasColumnType("int");

                    b.HasKey("CategoryID");

                    b.ToTable("Category", (string)null);

                    b.HasData(
                        new
                        {
                            CategoryID = new Guid("48370ccf-8013-41a3-9495-95ba8ea416fb"),
                            description = "Personal tasks",
                            name = "Personal",
                            weight = 15
                        },
                        new
                        {
                            CategoryID = new Guid("48370ccf-8013-41a3-9495-95ba8ea41602"),
                            description = "Work tasks",
                            name = "Work",
                            weight = 50
                        });
                });

            modelBuilder.Entity("ProjectEF.Task", b =>
                {
                    b.Property<Guid>("TaskID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<int>("TaskPriority")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("TaskID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Task", (string)null);

                    b.HasData(
                        new
                        {
                            TaskID = new Guid("48370ccf-8013-41a3-9495-95ba8ea41601"),
                            CategoryID = new Guid("48370ccf-8013-41a3-9495-95ba8ea416fb"),
                            CreationDate = new DateTime(2023, 8, 8, 19, 32, 3, 164, DateTimeKind.Local).AddTicks(442),
                            Description = "Study Math for the sunday",
                            IsCompleted = false,
                            TaskPriority = 0,
                            Title = "Study for exam"
                        });
                });

            modelBuilder.Entity("ProjectEF.Task", b =>
                {
                    b.HasOne("ProjectEF.Category", "Category")
                        .WithMany("Tasks")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ProjectEF.Category", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
